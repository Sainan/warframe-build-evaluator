local function optimise_public_export(data)
	local optimised = {}
	for data as item do
		optimised[item.uniqueName] = item
	end
	return optimised
end

-- Load data up-front, because a) Emscripten would die if we tried loading overframe_mods in a single ccall, and b) we need some of this data for the UI.
do
	ExportWarframes = js_invoke("fetch_data_json", "ExportWarframes_en").ExportWarframes
	for ExportWarframes as item do
		if item.name:sub(1, 11) ~= "<ARCHWING> " then
			js_invoke("add_datalist_option", "datalist-powersuits", item.uniqueName, item.name)
		end
	end
	ExportWarframes = optimise_public_export(ExportWarframes)

	ExportWeapons = optimise_public_export(js_invoke("fetch_data_json", "ExportWeapons_en").ExportWeapons)
	overframe_mods = js_invoke("fetch_data_json", "overframe_mods")
	overframe_modsets = js_invoke("fetch_data_json", "overframe_modsets")
end

evaluator = dofile("/evaluator.pluto")

parse_build = evaluator.parse_build
evaluate_build = evaluator.evaluate_build -- TODO: Remove this once conditionals are implemented

js_invoke("ready_to_evaluate")

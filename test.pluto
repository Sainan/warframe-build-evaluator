local { evaluate_build } = require "evaluator"

local function about_equal(a, b)
    return math.abs(a - b) < 1
end

-- Test rank 30 stats
do
	-- Most warframes just gain 100 health, 100 shield, and 50 power.
	local excalibur = evaluate_build { powersuit = { name = "/Lotus/Powersuits/Excalibur/Excalibur", rank = 30 } }
	assert(excalibur.health == 370)
	assert(excalibur.shield == 370)
	assert(excalibur.power == 150)

	-- Then there's some who gain 200 health but no shields.
	local inaros = evaluate_build { powersuit = { name = "/Lotus/Powersuits/Sandman/Sandman", rank = 30 } }
	assert(inaros.health == 2310)
	assert(inaros.shield == 0)
	assert(inaros.power == 150)
	local grendel = evaluate_build { powersuit = { name = "/Lotus/Powersuits/Devourer/Devourer", rank = 30 } }
	assert(grendel.health == 1295)
	assert(grendel.shield == 95)
	assert(grendel.power == 225)

	-- Nidus has no shields, instead gains 100 armor.
	local nidus = evaluate_build { powersuit = { name = "/Lotus/Powersuits/Infestation/Infestation", rank = 30 } }
	assert(nidus.health == 555)
	assert(nidus.shield == 0)
	assert(nidus.armor == 450)
	assert(nidus.power == 150)

	-- Hildryn gains 500 shields.
	local hildyrn = evaluate_build { powersuit = { name = "/Lotus/Powersuits/IronFrame/IronFrame", rank = 30 } }
	assert(hildyrn.health == 280)
	assert(hildyrn.shield == 1780)
	assert(hildyrn.power == 0)

	-- Xaku gains 90 health, 90 shield, and 70 power.
	local xaku = evaluate_build { powersuit = { name = "/Lotus/Powersuits/BrokenFrame/BrokenFrame", rank = 30 } }
	assert(xaku.health == 359)
	assert(xaku.shield == 329)
	assert(xaku.power == 230)

	-- Lavos gains 200 health, 100 shield, and 100 armor.
	local lavos = evaluate_build { powersuit = { name = "/Lotus/Powersuits/Alchemist/Alchemist", rank = 30 } }
	assert(lavos.health == 740)
	assert(lavos.shield == 370)
	assert(lavos.armor == 675)
	assert(lavos.power == 0)
end

-- Test intermediate rank stats
do
	local base = evaluate_build { powersuit = { name = "/Lotus/Powersuits/Excalibur/Excalibur", rank = 0 } }
	local r22 = evaluate_build { powersuit = { name = "/Lotus/Powersuits/Excalibur/Excalibur", rank = 22 } }
	assert(r22.power == base.power + 35)
	assert(r22.health == base.health + 80)
	assert(r22.shield == base.shield + 70)
end

-- Test mods increasing stats
do
	assert(about_equal(evaluate_build{ powersuit = { name = "/Lotus/Powersuits/Sandman/Sandman", rank = 30, mods = {{ name = "/Lotus/Upgrades/Mods/Warframe/AvatarHealthMaxMod", rank = 0 }}}}.health, 2520))
	assert(about_equal(evaluate_build{ powersuit = { name = "/Lotus/Powersuits/Sandman/Sandman", rank = 30, mods = {{ name = "/Lotus/Upgrades/Mods/Warframe/AvatarHealthMaxMod", rank = 1 }}}}.health, 2730))
	assert(about_equal(evaluate_build{ powersuit = { name = "/Lotus/Powersuits/Sandman/Sandman", rank = 30, mods = {{ name = "/Lotus/Upgrades/Mods/Warframe/AvatarHealthMaxMod", rank = 2 }}}}.health, 2940))
	assert(about_equal(evaluate_build{ powersuit = { name = "/Lotus/Powersuits/Sandman/Sandman", rank = 30, mods = {{ name = "/Lotus/Upgrades/Mods/Warframe/AvatarHealthMaxMod", rank = 3 }}}}.health, 3150))
	assert(about_equal(evaluate_build{ powersuit = { name = "/Lotus/Powersuits/Sandman/Sandman", rank = 30, mods = {{ name = "/Lotus/Upgrades/Mods/Warframe/AvatarHealthMaxMod", rank = 4 }}}}.health, 3360))
end
do
	assert(about_equal(evaluate_build{ powersuit = { name = "/Lotus/Powersuits/Sandman/Sandman", rank = 30, mods = {{ name = "/Lotus/Upgrades/Mods/Warframe/DualStat/VigorMod", rank = 0 }}}}.health, 2502))
	assert(about_equal(evaluate_build{ powersuit = { name = "/Lotus/Powersuits/Sandman/Sandman", rank = 30, mods = {{ name = "/Lotus/Upgrades/Mods/Warframe/DualStat/VigorMod", rank = 5 }}}}.health, 3464))
end
